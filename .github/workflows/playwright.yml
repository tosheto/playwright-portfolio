name: Playwright CI & Publish reports

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  test-and-package:
    name: Test & Package reports (all projects)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers (all)
        run: npx playwright install --with-deps

      # IMPORTANT: single run -> one combined Playwright HTML report for all projects
      - name: Run Playwright tests (all projects)
        run: npx playwright test --reporter=line,html,allure-playwright

      # Allure needs Java for HTML generation
      - name: Setup Java (for Allure)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Generate Allure HTML (if results exist)
        shell: bash
        run: |
          set -euo pipefail
          if compgen -G "allure-results/*" > /dev/null; then
            npx allure generate ./allure-results --clean -o ./allure-report
          else
            echo "No allure-results found; skipping allure-report generation."
          fi

      # Build the GitHub Pages artifact with fixed paths:
      # /playwright-report and /allure-report at repo root
      - name: Prepare Pages artifact
        shell: bash
        run: |
          set -euo pipefail
          rm -rf site
          mkdir -p site

          # Copy Playwright HTML to /playwright-report
          if [ -d "playwright-report" ]; then
            mkdir -p site/playwright-report
            cp -r playwright-report/. site/playwright-report/
          fi

          # Copy Allure HTML to /allure-report
          if [ -d "allure-report" ]; then
            mkdir -p site/allure-report
            cp -r allure-report/. site/allure-report/
          fi

          # Optional minimal index (линкове към двата отчета)
          build_time="$(date -u +'%Y-%m-%d %H:%M UTC')"
          {
            echo '<!doctype html><meta charset="utf-8">'
            echo '<title>Playwright Reports</title>'
            echo '<h1>Playwright Reports</h1>'
            echo "<p>Build time: ${build_time}</p>"
            echo '<ul>'
            [ -d site/playwright-report ] && echo '<li><a href="playwright-report/index.html">Playwright HTML Report</a></li>'
            [ -d site/allure-report ] && echo '<li><a href="allure-report/index.html">Allure Report</a></li>'
            echo '</ul>'
          } > site/index.html

      - name: Upload site artifact for Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    name: Deploy to GitHub Pages
    needs: test-and-package
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
