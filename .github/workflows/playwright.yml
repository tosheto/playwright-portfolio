name: Playwright CI & Publish reports

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  test:
    name: Test (${{ matrix.browser }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browser (${{ matrix.browser }})
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests (${{ matrix.browser }})
        run: npx playwright test --project=${{ matrix.browser }} --reporter=line,html,allure-playwright

      - name: Upload Playwright HTML report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report-${{ matrix.browser }}
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 7

      - name: Check if Allure results exist
        id: allure_check
        shell: bash
        run: |
          if compgen -G "allure-results/*" > /dev/null; then
            echo "has_results=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_results=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Java (for Allure)
        if: ${{ always() && steps.allure_check.outputs.has_results == 'true' }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Generate Allure HTML
        if: ${{ always() && steps.allure_check.outputs.has_results == 'true' }}
        run: npx allure generate ./allure-results --clean -o ./allure-report

      - name: Upload Allure HTML report (artifact)
        if: ${{ always() && steps.allure_check.outputs.has_results == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: allure-html-report-${{ matrix.browser }}
          path: allure-report/
          if-no-files-found: ignore
          retention-days: 7

  package-site:
    name: Package site (aggregate reports)
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (for landing assets)
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Build site folder (aggregate)
        shell: bash
        run: |
          set -euo pipefail
          rm -rf site
          mkdir -p site

          browsers=(chromium firefox webkit)

          # Copy reports under site/{browser}/...
          for b in "${browsers[@]}"; do
            if [ -d "artifacts/playwright-html-report-$b" ]; then
              mkdir -p "site/$b/playwright-report"
              cp -r "artifacts/playwright-html-report-$b/." "site/$b/playwright-report/"
            fi
            if [ -d "artifacts/allure-html-report-$b" ]; then
              mkdir -p "site/$b/allure-report"
              cp -r "artifacts/allure-html-report-$b/." "site/$b/allure-report/"
            fi
          done

          build_time="$(date -u +'%Y-%m-%d %H:%M UTC')"

          # Create root index.html (simple echoes; no heredoc/sed)
          {
            echo '<!doctype html>'
            echo '<html>'
            echo '<head>'
            echo '  <meta charset="utf-8"/>'
            echo '  <meta name="viewport" content="width=device-width, initial-scale=1"/>'
            echo '  <title>Playwright Reports</title>'
            echo '  <style>body{font-family:system-ui,-apple-system,Segoe UI,Roboto,sans-serif;margin:2rem;}h1{margin-bottom:.25rem;}small{color:#666}.grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:1rem;margin-top:1rem}.card{border:1px solid #eee;border-radius:12px;padding:1rem}.card h2{margin-top:0;font-size:1.1rem;text-transform:capitalize}a{text-decoration:none}ul{margin:.5rem 0 0 1.25rem}</style>'
            echo '</head>'
            echo '<body>'
            echo "  <h1>Playwright Reports</h1><small>Build time: ${build_time}</small>"
            echo '  <div class="grid">'
          } > site/index.html

          for b in "${browsers[@]}"; do
            has_html=false
            has_allure=false
            [ -d "site/$b/playwright-report" ] && has_html=true
            [ -d "site/$b/allure-report" ] && has_allure=true

            if $has_html || $has_allure; then
              {
                echo "    <div class=\"card\"><h2>${b}</h2><ul>"
                $has_html && echo "      <li><a href=\"${b}/playwright-report/index.html\">Playwright HTML</a></li>"
                $has_allure && echo "      <li><a href=\"${b}/allure-report/index.html\">Allure HTML</a></li>"
                echo "    </ul></div>"
              } >> site/index.html
            fi
          done

          {
            echo '  </div>'
            echo '</body>'
            echo '</html>'
          } >> site/index.html

      - name: Upload site artifact for Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    name: Deploy to GitHub Pages
    needs: package-site
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
